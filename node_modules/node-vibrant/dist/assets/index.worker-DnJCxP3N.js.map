{"version":3,"file":"index.worker-DnJCxP3N.js","sources":["../../vibrant-image/dist/esm/histogram.js","../../vibrant-image/dist/esm/index.js","../../vibrant-core/dist/esm/pipeline/index.js","../../vibrant-worker/dist/esm/worker.js","../../vibrant-color/dist/esm/converter.js","../../vibrant-color/dist/esm/index.js","../../vibrant-core/dist/esm/pipeline/worker/host.js","../../vibrant-quantizer-mmcq/dist/esm/vbox.js","../../vibrant-quantizer-mmcq/dist/esm/pqueue.js","../../vibrant-quantizer-mmcq/dist/esm/index.js","../../vibrant-generator-default/dist/esm/index.js","../src/pipeline/index.ts","../src/pipeline/index.worker.ts"],"sourcesContent":["class Histogram {\n  constructor(pixels, opts) {\n    this.pixels = pixels;\n    this.opts = opts;\n    const { sigBits } = opts;\n    const getColorIndex = (r2, g2, b2) => (r2 << 2 * sigBits) + (g2 << sigBits) + b2;\n    this.getColorIndex = getColorIndex;\n    const rshift = 8 - sigBits;\n    const hn = 1 << 3 * sigBits;\n    const hist = new Uint32Array(hn);\n    let rmax;\n    let rmin;\n    let gmax;\n    let gmin;\n    let bmax;\n    let bmin;\n    let r;\n    let g;\n    let b;\n    let a;\n    rmax = gmax = bmax = 0;\n    rmin = gmin = bmin = Number.MAX_VALUE;\n    const n = pixels.length / 4;\n    let i = 0;\n    while (i < n) {\n      const offset = i * 4;\n      i++;\n      r = pixels[offset + 0];\n      g = pixels[offset + 1];\n      b = pixels[offset + 2];\n      a = pixels[offset + 3];\n      if (a === 0) continue;\n      r = r >> rshift;\n      g = g >> rshift;\n      b = b >> rshift;\n      const index = getColorIndex(r, g, b);\n      hist[index] += 1;\n      if (r > rmax) rmax = r;\n      if (r < rmin) rmin = r;\n      if (g > gmax) gmax = g;\n      if (g < gmin) gmin = g;\n      if (b > bmax) bmax = b;\n      if (b < bmin) bmin = b;\n    }\n    this._colorCount = hist.reduce(\n      (total, c) => c > 0 ? total + 1 : total,\n      0\n    );\n    this.hist = hist;\n    this.rmax = rmax;\n    this.rmin = rmin;\n    this.gmax = gmax;\n    this.gmin = gmin;\n    this.bmax = bmax;\n    this.bmin = bmin;\n  }\n  get colorCount() {\n    return this._colorCount;\n  }\n}\nexport {\n  Histogram\n};\n//# sourceMappingURL=histogram.js.map\n","import { Histogram } from \"./histogram.js\";\nclass ImageBase {\n  scaleDown(opts) {\n    const width = this.getWidth();\n    const height = this.getHeight();\n    let ratio = 1;\n    if (opts.maxDimension > 0) {\n      const maxSide = Math.max(width, height);\n      if (maxSide > opts.maxDimension) ratio = opts.maxDimension / maxSide;\n    } else {\n      ratio = 1 / opts.quality;\n    }\n    if (ratio < 1) this.resize(width * ratio, height * ratio, ratio);\n  }\n}\nfunction applyFilters(imageData, filters) {\n  var _a;\n  if (filters.length > 0) {\n    const pixels = imageData.data;\n    const n = pixels.length / 4;\n    let offset;\n    let r;\n    let g;\n    let b;\n    let a;\n    for (let i = 0; i < n; i++) {\n      offset = i * 4;\n      r = pixels[offset + 0];\n      g = pixels[offset + 1];\n      b = pixels[offset + 2];\n      a = pixels[offset + 3];\n      for (let j = 0; j < filters.length; j++) {\n        if (!((_a = filters[j]) == null ? void 0 : _a.call(filters, r, g, b, a))) {\n          pixels[offset + 3] = 0;\n          break;\n        }\n      }\n    }\n  }\n  return imageData;\n}\nexport {\n  Histogram,\n  ImageBase,\n  applyFilters\n};\n//# sourceMappingURL=index.js.map\n","import { applyFilters } from \"@vibrant/image\";\nclass Stage {\n  constructor(pipeline) {\n    this.pipeline = pipeline;\n    this._map = {};\n  }\n  names() {\n    return Object.keys(this._map);\n  }\n  has(name) {\n    return !!this._map[name];\n  }\n  get(name) {\n    return this._map[name];\n  }\n  register(name, stageFn) {\n    this._map[name] = stageFn;\n    return this.pipeline;\n  }\n}\nclass BasicPipeline {\n  constructor() {\n    this.filter = new Stage(this);\n    this.quantizer = new Stage(this);\n    this.generator = new Stage(this);\n  }\n  _buildProcessTasks({\n    filters,\n    quantizer,\n    generators\n  }) {\n    if (generators.length === 1 && generators[0] === \"*\") {\n      generators = this.generator.names();\n    }\n    return {\n      filters: filters.map((f) => createTask(this.filter, f)),\n      quantizer: createTask(this.quantizer, quantizer),\n      generators: generators.map((g) => createTask(this.generator, g))\n    };\n    function createTask(stage, o) {\n      let name;\n      let options;\n      if (typeof o === \"string\") {\n        name = o;\n      } else {\n        name = o.name;\n        options = o.options;\n      }\n      return {\n        name,\n        fn: stage.get(name),\n        options\n      };\n    }\n  }\n  async process(imageData, opts) {\n    const { filters, quantizer, generators } = this._buildProcessTasks(opts);\n    const imageFilterData = await this._filterColors(filters, imageData);\n    const colors = await this._generateColors(quantizer, imageFilterData);\n    const palettes = await this._generatePalettes(generators, colors);\n    return {\n      colors,\n      palettes\n    };\n  }\n  _filterColors(filters, imageData) {\n    return Promise.resolve(\n      applyFilters(\n        imageData,\n        filters.map(({ fn }) => fn)\n      )\n    );\n  }\n  _generateColors(quantizer, imageData) {\n    return Promise.resolve(quantizer.fn(imageData.data, quantizer.options));\n  }\n  async _generatePalettes(generators, colors) {\n    const promiseArr = await Promise.all(\n      generators.map(({ fn, options }) => Promise.resolve(fn(colors, options)))\n    );\n    return Promise.resolve(\n      promiseArr.reduce(\n        (promises, promiseVal, i) => {\n          promises[generators[i].name] = promiseVal;\n          return promises;\n        },\n        {}\n      )\n    );\n  }\n}\nexport {\n  BasicPipeline,\n  Stage\n};\n//# sourceMappingURL=index.js.map\n","function runInWorker(self, fn) {\n  self.onmessage = (event) => {\n    const data = event.data;\n    const { id, payload } = data;\n    Promise.resolve(fn(...payload)).then((ret) => {\n      self.postMessage({\n        id,\n        type: \"return\",\n        payload: ret\n      });\n    }).catch((e) => {\n      self.postMessage({\n        id,\n        type: \"error\",\n        payload: e.message\n      });\n    });\n  };\n}\nexport {\n  runInWorker\n};\n//# sourceMappingURL=worker.js.map\n","const DELTAE94_DIFF_STATUS = {\n  NA: 0,\n  PERFECT: 1,\n  CLOSE: 2,\n  GOOD: 10,\n  SIMILAR: 50\n};\nfunction hexToRgb(hex) {\n  const m = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n  if (!m) throw new RangeError(`'${hex}' is not a valid hex color`);\n  if (!m[1] || !m[2] || !m[3])\n    throw new RangeError(`'${hex}' is not a valid hex color`);\n  return [m[1], m[2], m[3]].map((s) => parseInt(s, 16));\n}\nfunction rgbToHex(r, g, b) {\n  return \"#\" + ((1 << 24) + (r << 16) + (g << 8) + b).toString(16).slice(1, 7);\n}\nfunction rgbToHsl(r, g, b) {\n  r /= 255;\n  g /= 255;\n  b /= 255;\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n  let h = 0;\n  let s = 0;\n  const l = (max + min) / 2;\n  if (max !== min) {\n    const d = max - min;\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n    switch (max) {\n      case r:\n        h = (g - b) / d + (g < b ? 6 : 0);\n        break;\n      case g:\n        h = (b - r) / d + 2;\n        break;\n      case b:\n        h = (r - g) / d + 4;\n        break;\n    }\n    h /= 6;\n  }\n  return [h, s, l];\n}\nfunction hslToRgb(h, s, l) {\n  let r;\n  let g;\n  let b;\n  function hue2rgb(p, q, t) {\n    if (t < 0) t += 1;\n    if (t > 1) t -= 1;\n    if (t < 1 / 6) return p + (q - p) * 6 * t;\n    if (t < 1 / 2) return q;\n    if (t < 2 / 3) return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n  }\n  if (s === 0) {\n    r = g = b = l;\n  } else {\n    const q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n    const p = 2 * l - q;\n    r = hue2rgb(p, q, h + 1 / 3);\n    g = hue2rgb(p, q, h);\n    b = hue2rgb(p, q, h - 1 / 3);\n  }\n  return [r * 255, g * 255, b * 255];\n}\nfunction rgbToXyz(r, g, b) {\n  r /= 255;\n  g /= 255;\n  b /= 255;\n  r = r > 0.04045 ? Math.pow((r + 5e-3) / 1.055, 2.4) : r / 12.92;\n  g = g > 0.04045 ? Math.pow((g + 5e-3) / 1.055, 2.4) : g / 12.92;\n  b = b > 0.04045 ? Math.pow((b + 5e-3) / 1.055, 2.4) : b / 12.92;\n  r *= 100;\n  g *= 100;\n  b *= 100;\n  const x = r * 0.4124 + g * 0.3576 + b * 0.1805;\n  const y = r * 0.2126 + g * 0.7152 + b * 0.0722;\n  const z = r * 0.0193 + g * 0.1192 + b * 0.9505;\n  return [x, y, z];\n}\nfunction xyzToCIELab(x, y, z) {\n  const REF_X = 95.047;\n  const REF_Y = 100;\n  const REF_Z = 108.883;\n  x /= REF_X;\n  y /= REF_Y;\n  z /= REF_Z;\n  x = x > 8856e-6 ? Math.pow(x, 1 / 3) : 7.787 * x + 16 / 116;\n  y = y > 8856e-6 ? Math.pow(y, 1 / 3) : 7.787 * y + 16 / 116;\n  z = z > 8856e-6 ? Math.pow(z, 1 / 3) : 7.787 * z + 16 / 116;\n  const L = 116 * y - 16;\n  const a = 500 * (x - y);\n  const b = 200 * (y - z);\n  return [L, a, b];\n}\nfunction rgbToCIELab(r, g, b) {\n  const [x, y, z] = rgbToXyz(r, g, b);\n  return xyzToCIELab(x, y, z);\n}\nfunction deltaE94(lab1, lab2) {\n  const WEIGHT_L = 1;\n  const WEIGHT_C = 1;\n  const WEIGHT_H = 1;\n  const [L1, a1, b1] = lab1;\n  const [L2, a2, b2] = lab2;\n  const dL = L1 - L2;\n  const da = a1 - a2;\n  const db = b1 - b2;\n  const xC1 = Math.sqrt(a1 * a1 + b1 * b1);\n  const xC2 = Math.sqrt(a2 * a2 + b2 * b2);\n  let xDL = L2 - L1;\n  let xDC = xC2 - xC1;\n  const xDE = Math.sqrt(dL * dL + da * da + db * db);\n  let xDH = Math.sqrt(xDE) > Math.sqrt(Math.abs(xDL)) + Math.sqrt(Math.abs(xDC)) ? Math.sqrt(xDE * xDE - xDL * xDL - xDC * xDC) : 0;\n  const xSC = 1 + 0.045 * xC1;\n  const xSH = 1 + 0.015 * xC1;\n  xDL /= WEIGHT_L;\n  xDC /= WEIGHT_C * xSC;\n  xDH /= WEIGHT_H * xSH;\n  return Math.sqrt(xDL * xDL + xDC * xDC + xDH * xDH);\n}\nfunction rgbDiff(rgb1, rgb2) {\n  const lab1 = rgbToCIELab.apply(void 0, rgb1);\n  const lab2 = rgbToCIELab.apply(void 0, rgb2);\n  return deltaE94(lab1, lab2);\n}\nfunction hexDiff(hex1, hex2) {\n  const rgb1 = hexToRgb(hex1);\n  const rgb2 = hexToRgb(hex2);\n  return rgbDiff(rgb1, rgb2);\n}\nfunction getColorDiffStatus(d) {\n  if (d < DELTAE94_DIFF_STATUS.NA) {\n    return \"N/A\";\n  }\n  if (d <= DELTAE94_DIFF_STATUS.PERFECT) {\n    return \"Perfect\";\n  }\n  if (d <= DELTAE94_DIFF_STATUS.CLOSE) {\n    return \"Close\";\n  }\n  if (d <= DELTAE94_DIFF_STATUS.GOOD) {\n    return \"Good\";\n  }\n  if (d < DELTAE94_DIFF_STATUS.SIMILAR) {\n    return \"Similar\";\n  }\n  return \"Wrong\";\n}\nexport {\n  DELTAE94_DIFF_STATUS,\n  deltaE94,\n  getColorDiffStatus,\n  hexDiff,\n  hexToRgb,\n  hslToRgb,\n  rgbDiff,\n  rgbToCIELab,\n  rgbToHex,\n  rgbToHsl,\n  rgbToXyz,\n  xyzToCIELab\n};\n//# sourceMappingURL=converter.js.map\n","import { rgbToHsl, rgbToHex } from \"./converter.js\";\nimport { DELTAE94_DIFF_STATUS, deltaE94, getColorDiffStatus, hexDiff, hexToRgb, hslToRgb, rgbDiff, rgbToCIELab, rgbToXyz, xyzToCIELab } from \"./converter.js\";\nclass Swatch {\n  static applyFilters(colors, filters) {\n    return filters.length > 0 ? colors.filter(({ r, g, b }) => {\n      var _a;\n      for (let j = 0; j < filters.length; j++) {\n        if (!((_a = filters[j]) == null ? void 0 : _a.call(filters, r, g, b, 255))) return false;\n      }\n      return true;\n    }) : colors;\n  }\n  /**\n   * Make a value copy of a swatch based on a previous one. Returns a new Swatch instance\n   * @param {Swatch} swatch\n   */\n  static clone(swatch) {\n    return new Swatch(swatch._rgb, swatch._population);\n  }\n  /**\n   * The red value in the RGB value\n   */\n  get r() {\n    return this._rgb[0];\n  }\n  /**\n   * The green value in the RGB value\n   */\n  get g() {\n    return this._rgb[1];\n  }\n  /**\n   * The blue value in the RGB value\n   */\n  get b() {\n    return this._rgb[2];\n  }\n  /**\n   * The color value as a rgb value\n   */\n  get rgb() {\n    return this._rgb;\n  }\n  /**\n   * The color value as a hsl value\n   */\n  get hsl() {\n    if (!this._hsl) {\n      const [r, g, b] = this._rgb;\n      this._hsl = rgbToHsl(r, g, b);\n    }\n    return this._hsl;\n  }\n  /**\n   * The color value as a hex string\n   */\n  get hex() {\n    if (!this._hex) {\n      const [r, g, b] = this._rgb;\n      this._hex = rgbToHex(r, g, b);\n    }\n    return this._hex;\n  }\n  get population() {\n    return this._population;\n  }\n  /**\n   * Get the JSON object for the swatch\n   */\n  toJSON() {\n    return {\n      rgb: this.rgb,\n      population: this.population\n    };\n  }\n  /**\n   * Get the color value as a rgb value\n   * @deprecated Use property instead\n   */\n  // TODO: deprecate internally, use property instead\n  getRgb() {\n    return this._rgb;\n  }\n  /**\n   * Get the color value as a hsl value\n   * @deprecated Use property instead\n   */\n  // TODO: deprecate internally, use property instead\n  getHsl() {\n    return this.hsl;\n  }\n  /**\n   * @deprecated Use property instead\n   */\n  // TODO: deprecate internally, use property instead\n  getPopulation() {\n    return this._population;\n  }\n  /**\n   * Get the color value as a hex string\n   * @deprecated Use property instead\n   */\n  // TODO: deprecate internally, use property instead\n  getHex() {\n    return this.hex;\n  }\n  getYiq() {\n    if (!this._yiq) {\n      const rgb = this._rgb;\n      this._yiq = (rgb[0] * 299 + rgb[1] * 587 + rgb[2] * 114) / 1e3;\n    }\n    return this._yiq;\n  }\n  get titleTextColor() {\n    if (!this._titleTextColor) {\n      this._titleTextColor = this.getYiq() < 200 ? \"#fff\" : \"#000\";\n    }\n    return this._titleTextColor;\n  }\n  get bodyTextColor() {\n    if (!this._bodyTextColor) {\n      this._bodyTextColor = this.getYiq() < 150 ? \"#fff\" : \"#000\";\n    }\n    return this._bodyTextColor;\n  }\n  getTitleTextColor() {\n    return this.titleTextColor;\n  }\n  getBodyTextColor() {\n    return this.bodyTextColor;\n  }\n  constructor(rgb, population) {\n    this._rgb = rgb;\n    this._population = population;\n  }\n}\nexport {\n  DELTAE94_DIFF_STATUS,\n  Swatch,\n  deltaE94,\n  getColorDiffStatus,\n  hexDiff,\n  hexToRgb,\n  hslToRgb,\n  rgbDiff,\n  rgbToCIELab,\n  rgbToHex,\n  rgbToHsl,\n  rgbToXyz,\n  xyzToCIELab\n};\n//# sourceMappingURL=index.js.map\n","import { runInWorker } from \"@vibrant/worker\";\nfunction runPipelineInWorker(self, pipeline) {\n  runInWorker(self, (imageData, opts) => pipeline.process(imageData, opts));\n}\nexport {\n  runPipelineInWorker\n};\n//# sourceMappingURL=host.js.map\n","import { Histogram } from \"@vibrant/image\";\nconst SIGBITS = 5;\nconst RSHIFT = 8 - SIGBITS;\nclass VBox {\n  constructor(r1, r2, g1, g2, b1, b2, histogram) {\n    this.histogram = histogram;\n    this._volume = -1;\n    this._avg = null;\n    this._count = -1;\n    this.dimension = { r1, r2, g1, g2, b1, b2 };\n  }\n  static build(pixels) {\n    const h = new Histogram(pixels, { sigBits: SIGBITS });\n    const { rmin, rmax, gmin, gmax, bmin, bmax } = h;\n    return new VBox(rmin, rmax, gmin, gmax, bmin, bmax, h);\n  }\n  invalidate() {\n    this._volume = this._count = -1;\n    this._avg = null;\n  }\n  volume() {\n    if (this._volume < 0) {\n      const { r1, r2, g1, g2, b1, b2 } = this.dimension;\n      this._volume = (r2 - r1 + 1) * (g2 - g1 + 1) * (b2 - b1 + 1);\n    }\n    return this._volume;\n  }\n  count() {\n    if (this._count < 0) {\n      const { hist, getColorIndex } = this.histogram;\n      const { r1, r2, g1, g2, b1, b2 } = this.dimension;\n      let c = 0;\n      for (let r = r1; r <= r2; r++) {\n        for (let g = g1; g <= g2; g++) {\n          for (let b = b1; b <= b2; b++) {\n            const index = getColorIndex(r, g, b);\n            if (!hist[index]) {\n              continue;\n            }\n            c += hist[index];\n          }\n        }\n      }\n      this._count = c;\n    }\n    return this._count;\n  }\n  clone() {\n    const { histogram } = this;\n    const { r1, r2, g1, g2, b1, b2 } = this.dimension;\n    return new VBox(r1, r2, g1, g2, b1, b2, histogram);\n  }\n  avg() {\n    if (!this._avg) {\n      const { hist, getColorIndex } = this.histogram;\n      const { r1, r2, g1, g2, b1, b2 } = this.dimension;\n      let ntot = 0;\n      const mult = 1 << 8 - SIGBITS;\n      let rsum;\n      let gsum;\n      let bsum;\n      rsum = gsum = bsum = 0;\n      for (let r = r1; r <= r2; r++) {\n        for (let g = g1; g <= g2; g++) {\n          for (let b = b1; b <= b2; b++) {\n            const index = getColorIndex(r, g, b);\n            const h = hist[index];\n            if (!h) continue;\n            ntot += h;\n            rsum += h * (r + 0.5) * mult;\n            gsum += h * (g + 0.5) * mult;\n            bsum += h * (b + 0.5) * mult;\n          }\n        }\n      }\n      if (ntot) {\n        this._avg = [~~(rsum / ntot), ~~(gsum / ntot), ~~(bsum / ntot)];\n      } else {\n        this._avg = [\n          ~~(mult * (r1 + r2 + 1) / 2),\n          ~~(mult * (g1 + g2 + 1) / 2),\n          ~~(mult * (b1 + b2 + 1) / 2)\n        ];\n      }\n    }\n    return this._avg;\n  }\n  contains(rgb) {\n    let [r, g, b] = rgb;\n    const { r1, r2, g1, g2, b1, b2 } = this.dimension;\n    r >>= RSHIFT;\n    g >>= RSHIFT;\n    b >>= RSHIFT;\n    return r >= r1 && r <= r2 && g >= g1 && g <= g2 && b >= b1 && b <= b2;\n  }\n  split() {\n    const { hist, getColorIndex } = this.histogram;\n    const { r1, r2, g1, g2, b1, b2 } = this.dimension;\n    const count = this.count();\n    if (!count) return [];\n    if (count === 1) return [this.clone()];\n    const rw = r2 - r1 + 1;\n    const gw = g2 - g1 + 1;\n    const bw = b2 - b1 + 1;\n    const maxw = Math.max(rw, gw, bw);\n    let accSum = null;\n    let sum;\n    let total;\n    sum = total = 0;\n    let maxd = null;\n    if (maxw === rw) {\n      maxd = \"r\";\n      accSum = new Uint32Array(r2 + 1);\n      for (let r = r1; r <= r2; r++) {\n        sum = 0;\n        for (let g = g1; g <= g2; g++) {\n          for (let b = b1; b <= b2; b++) {\n            const index = getColorIndex(r, g, b);\n            if (!hist[index]) continue;\n            sum += hist[index];\n          }\n        }\n        total += sum;\n        accSum[r] = total;\n      }\n    } else if (maxw === gw) {\n      maxd = \"g\";\n      accSum = new Uint32Array(g2 + 1);\n      for (let g = g1; g <= g2; g++) {\n        sum = 0;\n        for (let r = r1; r <= r2; r++) {\n          for (let b = b1; b <= b2; b++) {\n            const index = getColorIndex(r, g, b);\n            if (!hist[index]) continue;\n            sum += hist[index];\n          }\n        }\n        total += sum;\n        accSum[g] = total;\n      }\n    } else {\n      maxd = \"b\";\n      accSum = new Uint32Array(b2 + 1);\n      for (let b = b1; b <= b2; b++) {\n        sum = 0;\n        for (let r = r1; r <= r2; r++) {\n          for (let g = g1; g <= g2; g++) {\n            const index = getColorIndex(r, g, b);\n            if (!hist[index]) continue;\n            sum += hist[index];\n          }\n        }\n        total += sum;\n        accSum[b] = total;\n      }\n    }\n    let splitPoint = -1;\n    const reverseSum = new Uint32Array(accSum.length);\n    for (let i = 0; i < accSum.length; i++) {\n      const d = accSum[i];\n      if (!d) continue;\n      if (splitPoint < 0 && d > total / 2) splitPoint = i;\n      reverseSum[i] = total - d;\n    }\n    const vbox = this;\n    function doCut(d) {\n      const dim1 = d + \"1\";\n      const dim2 = d + \"2\";\n      const d1 = vbox.dimension[dim1];\n      let d2 = vbox.dimension[dim2];\n      const vbox1 = vbox.clone();\n      const vbox2 = vbox.clone();\n      const left = splitPoint - d1;\n      const right = d2 - splitPoint;\n      if (left <= right) {\n        d2 = Math.min(d2 - 1, ~~(splitPoint + right / 2));\n        d2 = Math.max(0, d2);\n      } else {\n        d2 = Math.max(d1, ~~(splitPoint - 1 - left / 2));\n        d2 = Math.min(vbox.dimension[dim2], d2);\n      }\n      while (!accSum[d2]) d2++;\n      let c2 = reverseSum[d2];\n      while (!c2 && accSum[d2 - 1]) c2 = reverseSum[--d2];\n      vbox1.dimension[dim2] = d2;\n      vbox2.dimension[dim1] = d2 + 1;\n      return [vbox1, vbox2];\n    }\n    return doCut(maxd);\n  }\n}\nexport {\n  VBox\n};\n//# sourceMappingURL=vbox.js.map\n","class PQueue {\n  _sort() {\n    if (!this._sorted) {\n      this.contents.sort(this._comparator);\n      this._sorted = true;\n    }\n  }\n  constructor(comparator) {\n    this._comparator = comparator;\n    this.contents = [];\n    this._sorted = false;\n  }\n  push(item) {\n    this.contents.push(item);\n    this._sorted = false;\n  }\n  peek(index) {\n    this._sort();\n    index = typeof index === \"number\" ? index : this.contents.length - 1;\n    return this.contents[index];\n  }\n  pop() {\n    this._sort();\n    return this.contents.pop();\n  }\n  size() {\n    return this.contents.length;\n  }\n  map(mapper) {\n    this._sort();\n    return this.contents.map(mapper);\n  }\n}\nexport {\n  PQueue\n};\n//# sourceMappingURL=pqueue.js.map\n","import { Swatch } from \"@vibrant/color\";\nimport { VBox } from \"./vbox.js\";\nimport { PQueue } from \"./pqueue.js\";\nconst fractByPopulations = 0.75;\nfunction _splitBoxes(pq, target) {\n  let lastSize = pq.size();\n  while (pq.size() < target) {\n    const vbox = pq.pop();\n    if (vbox && vbox.count() > 0) {\n      const [vbox1, vbox2] = vbox.split();\n      if (!vbox1) break;\n      pq.push(vbox1);\n      if (vbox2 && vbox2.count() > 0) pq.push(vbox2);\n      if (pq.size() === lastSize) {\n        break;\n      } else {\n        lastSize = pq.size();\n      }\n    } else {\n      break;\n    }\n  }\n}\nconst MMCQ = (pixels, opts) => {\n  if (pixels.length === 0 || opts.colorCount < 2 || opts.colorCount > 256) {\n    throw new Error(\"Wrong MMCQ parameters\");\n  }\n  const vbox = VBox.build(pixels);\n  vbox.histogram.colorCount;\n  const pq = new PQueue((a, b) => a.count() - b.count());\n  pq.push(vbox);\n  _splitBoxes(pq, fractByPopulations * opts.colorCount);\n  const pq2 = new PQueue(\n    (a, b) => a.count() * a.volume() - b.count() * b.volume()\n  );\n  pq2.contents = pq.contents;\n  _splitBoxes(pq2, opts.colorCount - pq2.size());\n  return generateSwatches(pq2);\n};\nfunction generateSwatches(pq) {\n  const swatches = [];\n  while (pq.size()) {\n    const v = pq.pop();\n    const color = v.avg();\n    swatches.push(new Swatch(color, v.count()));\n  }\n  return swatches;\n}\nexport {\n  MMCQ\n};\n//# sourceMappingURL=index.js.map\n","import { Swatch, hslToRgb } from \"@vibrant/color\";\nconst DefaultOpts = {\n  targetDarkLuma: 0.26,\n  maxDarkLuma: 0.45,\n  minLightLuma: 0.55,\n  targetLightLuma: 0.74,\n  minNormalLuma: 0.3,\n  targetNormalLuma: 0.5,\n  maxNormalLuma: 0.7,\n  targetMutesSaturation: 0.3,\n  maxMutesSaturation: 0.4,\n  targetVibrantSaturation: 1,\n  minVibrantSaturation: 0.35,\n  weightSaturation: 3,\n  weightLuma: 6.5,\n  weightPopulation: 0.5\n};\nfunction _findMaxPopulation(swatches) {\n  let p = 0;\n  swatches.forEach((s) => {\n    p = Math.max(p, s.population);\n  });\n  return p;\n}\nfunction _isAlreadySelected(palette, s) {\n  return palette.Vibrant === s || palette.DarkVibrant === s || palette.LightVibrant === s || palette.Muted === s || palette.DarkMuted === s || palette.LightMuted === s;\n}\nfunction _createComparisonValue(saturation, targetSaturation, luma, targetLuma, population, maxPopulation, opts) {\n  function weightedMean(...values) {\n    let sum = 0;\n    let weightSum = 0;\n    for (let i = 0; i < values.length; i += 2) {\n      const value = values[i];\n      const weight = values[i + 1];\n      if (!value || !weight) continue;\n      sum += value * weight;\n      weightSum += weight;\n    }\n    return sum / weightSum;\n  }\n  function invertDiff(value, targetValue) {\n    return 1 - Math.abs(value - targetValue);\n  }\n  return weightedMean(\n    invertDiff(saturation, targetSaturation),\n    opts.weightSaturation,\n    invertDiff(luma, targetLuma),\n    opts.weightLuma,\n    population / maxPopulation,\n    opts.weightPopulation\n  );\n}\nfunction _findColorVariation(palette, swatches, maxPopulation, targetLuma, minLuma, maxLuma, targetSaturation, minSaturation, maxSaturation, opts) {\n  let max = null;\n  let maxValue = 0;\n  swatches.forEach((swatch) => {\n    const [, s, l] = swatch.hsl;\n    if (s >= minSaturation && s <= maxSaturation && l >= minLuma && l <= maxLuma && !_isAlreadySelected(palette, swatch)) {\n      const value = _createComparisonValue(\n        s,\n        targetSaturation,\n        l,\n        targetLuma,\n        swatch.population,\n        maxPopulation,\n        opts\n      );\n      if (max === null || value > maxValue) {\n        max = swatch;\n        maxValue = value;\n      }\n    }\n  });\n  return max;\n}\nfunction _generateVariationColors(swatches, maxPopulation, opts) {\n  const palette = {\n    Vibrant: null,\n    DarkVibrant: null,\n    LightVibrant: null,\n    Muted: null,\n    DarkMuted: null,\n    LightMuted: null\n  };\n  palette.Vibrant = _findColorVariation(\n    palette,\n    swatches,\n    maxPopulation,\n    opts.targetNormalLuma,\n    opts.minNormalLuma,\n    opts.maxNormalLuma,\n    opts.targetVibrantSaturation,\n    opts.minVibrantSaturation,\n    1,\n    opts\n  );\n  palette.LightVibrant = _findColorVariation(\n    palette,\n    swatches,\n    maxPopulation,\n    opts.targetLightLuma,\n    opts.minLightLuma,\n    1,\n    opts.targetVibrantSaturation,\n    opts.minVibrantSaturation,\n    1,\n    opts\n  );\n  palette.DarkVibrant = _findColorVariation(\n    palette,\n    swatches,\n    maxPopulation,\n    opts.targetDarkLuma,\n    0,\n    opts.maxDarkLuma,\n    opts.targetVibrantSaturation,\n    opts.minVibrantSaturation,\n    1,\n    opts\n  );\n  palette.Muted = _findColorVariation(\n    palette,\n    swatches,\n    maxPopulation,\n    opts.targetNormalLuma,\n    opts.minNormalLuma,\n    opts.maxNormalLuma,\n    opts.targetMutesSaturation,\n    0,\n    opts.maxMutesSaturation,\n    opts\n  );\n  palette.LightMuted = _findColorVariation(\n    palette,\n    swatches,\n    maxPopulation,\n    opts.targetLightLuma,\n    opts.minLightLuma,\n    1,\n    opts.targetMutesSaturation,\n    0,\n    opts.maxMutesSaturation,\n    opts\n  );\n  palette.DarkMuted = _findColorVariation(\n    palette,\n    swatches,\n    maxPopulation,\n    opts.targetDarkLuma,\n    0,\n    opts.maxDarkLuma,\n    opts.targetMutesSaturation,\n    0,\n    opts.maxMutesSaturation,\n    opts\n  );\n  return palette;\n}\nfunction _generateEmptySwatches(palette, _maxPopulation, opts) {\n  if (!palette.Vibrant && !palette.DarkVibrant && !palette.LightVibrant) {\n    if (!palette.DarkVibrant && palette.DarkMuted) {\n      let [h, s, l] = palette.DarkMuted.hsl;\n      l = opts.targetDarkLuma;\n      palette.DarkVibrant = new Swatch(hslToRgb(h, s, l), 0);\n    }\n    if (!palette.LightVibrant && palette.LightMuted) {\n      let [h, s, l] = palette.LightMuted.hsl;\n      l = opts.targetDarkLuma;\n      palette.DarkVibrant = new Swatch(hslToRgb(h, s, l), 0);\n    }\n  }\n  if (!palette.Vibrant && palette.DarkVibrant) {\n    let [h, s, l] = palette.DarkVibrant.hsl;\n    l = opts.targetNormalLuma;\n    palette.Vibrant = new Swatch(hslToRgb(h, s, l), 0);\n  } else if (!palette.Vibrant && palette.LightVibrant) {\n    let [h, s, l] = palette.LightVibrant.hsl;\n    l = opts.targetNormalLuma;\n    palette.Vibrant = new Swatch(hslToRgb(h, s, l), 0);\n  }\n  if (!palette.DarkVibrant && palette.Vibrant) {\n    let [h, s, l] = palette.Vibrant.hsl;\n    l = opts.targetDarkLuma;\n    palette.DarkVibrant = new Swatch(hslToRgb(h, s, l), 0);\n  }\n  if (!palette.LightVibrant && palette.Vibrant) {\n    let [h, s, l] = palette.Vibrant.hsl;\n    l = opts.targetLightLuma;\n    palette.LightVibrant = new Swatch(hslToRgb(h, s, l), 0);\n  }\n  if (!palette.Muted && palette.Vibrant) {\n    let [h, s, l] = palette.Vibrant.hsl;\n    l = opts.targetMutesSaturation;\n    palette.Muted = new Swatch(hslToRgb(h, s, l), 0);\n  }\n  if (!palette.DarkMuted && palette.DarkVibrant) {\n    let [h, s, l] = palette.DarkVibrant.hsl;\n    l = opts.targetMutesSaturation;\n    palette.DarkMuted = new Swatch(hslToRgb(h, s, l), 0);\n  }\n  if (!palette.LightMuted && palette.LightVibrant) {\n    let [h, s, l] = palette.LightVibrant.hsl;\n    l = opts.targetMutesSaturation;\n    palette.LightMuted = new Swatch(hslToRgb(h, s, l), 0);\n  }\n}\nconst DefaultGenerator = (swatches, opts) => {\n  opts = Object.assign({}, DefaultOpts, opts);\n  const maxPopulation = _findMaxPopulation(swatches);\n  const palette = _generateVariationColors(swatches, maxPopulation, opts);\n  _generateEmptySwatches(palette, maxPopulation, opts);\n  return palette;\n};\nexport {\n  DefaultGenerator\n};\n//# sourceMappingURL=index.js.map\n","import { MMCQ } from \"@vibrant/quantizer-mmcq\";\nimport { DefaultGenerator } from \"@vibrant/generator-default\";\n\nimport { BasicPipeline } from \"@vibrant/core\";\n\nexport const pipeline = new BasicPipeline().filter\n\t.register(\n\t\t\"default\",\n\t\t(r: number, g: number, b: number, a: number) =>\n\t\t\ta >= 125 && !(r > 250 && g > 250 && b > 250),\n\t)\n\t.quantizer.register(\"mmcq\", MMCQ)\n\t.generator.register(\"default\", DefaultGenerator);\n","import { runPipelineInWorker } from \"@vibrant/core\";\nimport { pipeline } from \"./\";\n\nrunPipelineInWorker(self, pipeline);\n"],"names":["pipeline","self"],"mappings":"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"}