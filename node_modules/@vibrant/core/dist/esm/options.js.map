{"version":3,"file":"options.js","sources":["../../src/options.ts"],"sourcesContent":["import { Filter, Palette, Swatch } from \"@vibrant/color\";\nimport { Image, ImageSource } from \"@vibrant/image\";\nimport { Quantizer } from \"@vibrant/quantizer\";\nimport { Generator } from \"@vibrant/generator\";\nimport { assignDeep } from \"./utils\";\nimport type { ProcessOptions, StageOptions } from \"./pipeline\";\nimport type { QuantizerOptions } from \"@vibrant/quantizer\";\nimport type { ImageClass, ImageOptions } from \"@vibrant/image\";\n\nexport interface Options extends ImageOptions, QuantizerOptions {\n\tuseWorker: boolean;\n\tImageClass: ImageClass;\n\tquantizer: string | StageOptions;\n\tgenerators: (string | StageOptions)[];\n\tfilters: string[];\n}\n\nexport function buildProcessOptions(\n\topts: Options,\n\toverride?: Partial<ProcessOptions>,\n): ProcessOptions {\n\tconst { colorCount, quantizer, generators, filters } = opts;\n\t// Merge with common quantizer options\n\tconst commonQuantizerOpts = { colorCount };\n\tconst q =\n\t\ttypeof quantizer === \"string\"\n\t\t\t? { name: quantizer, options: {} }\n\t\t\t: quantizer;\n\tq.options = assignDeep({}, commonQuantizerOpts, q.options);\n\n\treturn assignDeep(\n\t\t{},\n\t\t{\n\t\t\tquantizer: q,\n\t\t\tgenerators,\n\t\t\tfilters,\n\t\t},\n\t\toverride,\n\t);\n}\n"],"names":[],"mappings":";AAiBgB,SAAA,oBACf,MACA,UACiB;AACjB,QAAM,EAAE,YAAY,WAAW,YAAY,QAAY,IAAA;AAEjD,QAAA,sBAAsB,EAAE,WAAW;AACnC,QAAA,IACL,OAAO,cAAc,WAClB,EAAE,MAAM,WAAW,SAAS,CAAC,EAAA,IAC7B;AACJ,IAAE,UAAU,WAAW,CAAI,GAAA,qBAAqB,EAAE,OAAO;AAElD,SAAA;AAAA,IACN,CAAC;AAAA,IACD;AAAA,MACC,WAAW;AAAA,MACX;AAAA,MACA;AAAA,IACD;AAAA,IACA;AAAA,EACD;AACD;"}