{"version":3,"file":"index.js","sources":["../../src/index.ts"],"sourcesContent":["import { buildProcessOptions } from \"./options\";\nimport { Builder } from \"./builder\";\nimport { assignDeep } from \"./utils\";\nimport type { Options } from \"./options\";\nimport type { Callback } from \"@vibrant/types\";\nimport type { Image, ImageSource } from \"@vibrant/image\";\n\nimport type { Palette } from \"@vibrant/color\";\n\nimport type { Pipeline, ProcessOptions, ProcessResult } from \"./pipeline\";\n\nexport interface VibrantStatic {\n\tfrom(src: ImageSource): Builder;\n}\n\nexport class Vibrant {\n\tprivate _result: ProcessResult | undefined;\n\tprivate static _pipeline: Pipeline;\n\n\tstatic use(pipeline: Pipeline) {\n\t\tthis._pipeline = pipeline;\n\t}\n\n\tstatic DefaultOpts: Partial<Options> = {\n\t\tcolorCount: 64,\n\t\tquality: 5,\n\t\tfilters: [],\n\t};\n\n\tstatic from(src: ImageSource): Builder {\n\t\treturn new Builder(src);\n\t}\n\n\tget result() {\n\t\treturn this._result;\n\t}\n\n\topts: Options;\n\n\tconstructor(\n\t\tprivate _src: ImageSource,\n\t\topts?: Partial<Options>,\n\t) {\n\t\tthis.opts = assignDeep({}, Vibrant.DefaultOpts, opts);\n\t}\n\n\tprivate _process(\n\t\timage: Image,\n\t\topts?: Partial<ProcessOptions>,\n\t): Promise<ProcessResult> {\n\t\timage.scaleDown(this.opts);\n\n\t\tconst processOpts = buildProcessOptions(this.opts, opts);\n\n\t\treturn Vibrant._pipeline.process(image.getImageData(), processOpts);\n\t}\n\n\tpalette(): Palette {\n\t\treturn this.swatches();\n\t}\n\n\tswatches(): Palette {\n\t\tthrow new Error(\n\t\t\t\"Method deprecated. Use `Vibrant.result.palettes[name]` instead\",\n\t\t);\n\t}\n\n\tasync getPalette(name: string, cb?: Callback<Palette>): Promise<Palette>;\n\tasync getPalette(cb?: Callback<Palette>): Promise<Palette>;\n\tasync getPalette(): Promise<Palette> {\n\t\tconst arg0 = arguments[0];\n\t\tconst arg1 = arguments[1];\n\t\tconst name = typeof arg0 === \"string\" ? arg0 : \"default\";\n\t\tconst cb = typeof arg0 === \"string\" ? arg1 : arg0;\n\t\tconst image = new this.opts.ImageClass();\n\t\ttry {\n\t\t\tconst image1 = await image.load(this._src);\n\t\t\tconst result1: ProcessResult = await this._process(image1, {\n\t\t\t\tgenerators: [name],\n\t\t\t});\n\t\t\tthis._result = result1;\n\t\t\tconst res = result1.palettes[name];\n\t\t\tif (!res) {\n\t\t\t\tthrow new Error(`Palette with name ${name} not found`);\n\t\t\t}\n\t\t\timage.remove();\n\t\t\tif (cb) {\n\t\t\t\tcb(undefined, res);\n\t\t\t}\n\t\t\treturn res;\n\t\t} catch (err) {\n\t\t\timage.remove();\n\t\t\tif (cb) {\n\t\t\t\tcb(err);\n\t\t\t}\n\t\t\treturn Promise.reject(err);\n\t\t}\n\t}\n\n\tasync getPalettes(\n\t\tnames: string[],\n\t\tcb?: Callback<Palette>,\n\t): Promise<{ [name: string]: Palette }>;\n\tasync getPalettes(\n\t\tcb?: Callback<Palette>,\n\t): Promise<{ [name: string]: Palette }>;\n\tasync getPalettes(): Promise<{ [name: string]: Palette }> {\n\t\tconst arg0 = arguments[0];\n\t\tconst arg1 = arguments[1];\n\t\tconst names = Array.isArray(arg0) ? arg0 : [\"*\"];\n\t\tconst cb = Array.isArray(arg0) ? arg1 : arg0;\n\t\tconst image = new this.opts.ImageClass();\n\t\ttry {\n\t\t\tconst image1 = await image.load(this._src);\n\t\t\tconst result1: ProcessResult = await this._process(image1, {\n\t\t\t\tgenerators: names,\n\t\t\t});\n\t\t\tthis._result = result1;\n\t\t\tconst res: any = result1.palettes;\n\t\t\timage.remove();\n\t\t\tif (cb) {\n\t\t\t\tcb(undefined, res);\n\t\t\t}\n\t\t\treturn res;\n\t\t} catch (err) {\n\t\t\timage.remove();\n\t\t\tif (cb) {\n\t\t\t\tcb(err);\n\t\t\t}\n\t\t\treturn Promise.reject(err);\n\t\t}\n\t}\n}\n\nexport { BasicPipeline } from \"./pipeline\";\nexport { WorkerPipeline } from \"./pipeline/worker/client\";\nexport { runPipelineInWorker } from \"./pipeline/worker/host\";\nexport { Builder };\n"],"names":[],"mappings":";;;;;;AAeO,MAAM,WAAN,MAAM,SAAQ;AAAA,EAwBpB,YACS,MACR,MACC;AAFO,SAAA,OAAA;AAGR,SAAK,OAAO,WAAW,CAAI,GAAA,SAAQ,aAAa,IAAI;AAAA,EAAA;AAAA,EAxBrD,OAAO,IAAI,UAAoB;AAC9B,SAAK,YAAY;AAAA,EAAA;AAAA,EASlB,OAAO,KAAK,KAA2B;AAC/B,WAAA,IAAI,QAAQ,GAAG;AAAA,EAAA;AAAA,EAGvB,IAAI,SAAS;AACZ,WAAO,KAAK;AAAA,EAAA;AAAA,EAYL,SACP,OACA,MACyB;AACnB,UAAA,UAAU,KAAK,IAAI;AAEzB,UAAM,cAAc,oBAAoB,KAAK,MAAM,IAAI;AAEvD,WAAO,SAAQ,UAAU,QAAQ,MAAM,gBAAgB,WAAW;AAAA,EAAA;AAAA,EAGnE,UAAmB;AAClB,WAAO,KAAK,SAAS;AAAA,EAAA;AAAA,EAGtB,WAAoB;AACnB,UAAM,IAAI;AAAA,MACT;AAAA,IACD;AAAA,EAAA;AAAA,EAKD,MAAM,aAA+B;AAC9B,UAAA,OAAO,UAAU,CAAC;AAClB,UAAA,OAAO,UAAU,CAAC;AACxB,UAAM,OAAO,OAAO,SAAS,WAAW,OAAO;AAC/C,UAAM,KAAK,OAAO,SAAS,WAAW,OAAO;AAC7C,UAAM,QAAQ,IAAI,KAAK,KAAK,WAAW;AACnC,QAAA;AACH,YAAM,SAAS,MAAM,MAAM,KAAK,KAAK,IAAI;AACzC,YAAM,UAAyB,MAAM,KAAK,SAAS,QAAQ;AAAA,QAC1D,YAAY,CAAC,IAAI;AAAA,MAAA,CACjB;AACD,WAAK,UAAU;AACT,YAAA,MAAM,QAAQ,SAAS,IAAI;AACjC,UAAI,CAAC,KAAK;AACT,cAAM,IAAI,MAAM,qBAAqB,IAAI,YAAY;AAAA,MAAA;AAEtD,YAAM,OAAO;AACb,UAAI,IAAI;AACP,WAAG,QAAW,GAAG;AAAA,MAAA;AAEX,aAAA;AAAA,aACC,KAAK;AACb,YAAM,OAAO;AACb,UAAI,IAAI;AACP,WAAG,GAAG;AAAA,MAAA;AAEA,aAAA,QAAQ,OAAO,GAAG;AAAA,IAAA;AAAA,EAC1B;AAAA,EAUD,MAAM,cAAoD;AACnD,UAAA,OAAO,UAAU,CAAC;AAClB,UAAA,OAAO,UAAU,CAAC;AACxB,UAAM,QAAQ,MAAM,QAAQ,IAAI,IAAI,OAAO,CAAC,GAAG;AAC/C,UAAM,KAAK,MAAM,QAAQ,IAAI,IAAI,OAAO;AACxC,UAAM,QAAQ,IAAI,KAAK,KAAK,WAAW;AACnC,QAAA;AACH,YAAM,SAAS,MAAM,MAAM,KAAK,KAAK,IAAI;AACzC,YAAM,UAAyB,MAAM,KAAK,SAAS,QAAQ;AAAA,QAC1D,YAAY;AAAA,MAAA,CACZ;AACD,WAAK,UAAU;AACf,YAAM,MAAW,QAAQ;AACzB,YAAM,OAAO;AACb,UAAI,IAAI;AACP,WAAG,QAAW,GAAG;AAAA,MAAA;AAEX,aAAA;AAAA,aACC,KAAK;AACb,YAAM,OAAO;AACb,UAAI,IAAI;AACP,WAAG,GAAG;AAAA,MAAA;AAEA,aAAA,QAAQ,OAAO,GAAG;AAAA,IAAA;AAAA,EAC1B;AAEF;AA7GC,SAAO,cAAgC;AAAA,EACtC,YAAY;AAAA,EACZ,SAAS;AAAA,EACT,SAAS,CAAA;AACV;AAZM,IAAM,UAAN;"}