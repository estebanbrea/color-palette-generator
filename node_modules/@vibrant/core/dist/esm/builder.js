import { assignDeep } from "./utils.js";
import { Vibrant } from "./index.js";
class Builder {
  constructor(src, opts = {}) {
    this._src = src;
    this._opts = assignDeep({}, Vibrant.DefaultOpts, opts);
  }
  maxColorCount(n) {
    this._opts.colorCount = n;
    return this;
  }
  maxDimension(d) {
    this._opts.maxDimension = d;
    return this;
  }
  addFilter(name) {
    if (!this._opts.filters) {
      this._opts.filters = [name];
    } else {
      this._opts.filters.push(name);
    }
    return this;
  }
  removeFilter(name) {
    if (this._opts.filters) {
      const i = this._opts.filters.indexOf(name);
      if (i > 0) this._opts.filters.splice(i);
    }
    return this;
  }
  clearFilters() {
    this._opts.filters = [];
    return this;
  }
  quality(q) {
    this._opts.quality = q;
    return this;
  }
  useImageClass(imageClass) {
    this._opts.ImageClass = imageClass;
    return this;
  }
  useGenerator(generator, options) {
    if (!this._opts.generators) this._opts.generators = [];
    this._opts.generators.push(
      options ? { name: generator, options } : generator
    );
    return this;
  }
  useQuantizer(quantizer, options) {
    this._opts.quantizer = options ? { name: quantizer, options } : quantizer;
    return this;
  }
  build() {
    return new Vibrant(this._src, this._opts);
  }
  getPalette(cb) {
    return this.build().getPalette(cb);
  }
  getSwatches(cb) {
    return this.build().getPalette(cb);
  }
}
export {
  Builder
};
//# sourceMappingURL=builder.js.map
